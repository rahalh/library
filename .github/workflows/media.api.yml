name: "Build, test and deploy the Media API"

on:
  workflow_dispatch:
  push:
    branches: [ main, dev ]
    paths:
      - src/services/Media/**
      - .github/workflows/media.api.yml

env:
  SERVICE: media
  IMAGE_NAME: media-service
  DOCKER_ID: rahalh

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: src/services/Media

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install dependencies
        run: dotnet restore
        working-directory: ${{env.working-directory}}

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ${{env.working-directory}}

#      - name: Test
#        run: dotnet test --no-restore --verbosity normal
#        working-directory: ${{env.working-directory}}

      - name: Setting environment variables
        id: get_env
        shell: bash
        run: |
          TMP_GITHUB_COMMITS_COUNT=$(git rev-list --count HEAD)
          TMP_GITHUB_COUNT_NUMBER=$(echo ${GITHUB_RUN_NUMBER})
          echo "::set-output name=GITHUB_SHA::$(echo ${GITHUB_SHA::8})"
          echo "::set-output name=RELEASE_VERSION::1.$TMP_GITHUB_COMMITS_COUNT.$TMP_GITHUB_COUNT_NUMBER"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build image
        shell: bash
        run: sudo -E docker build . -t media
        working-directory: ${{env.working-directory}}

      - name: tag image
        shell: bash
        run: |
          sudo -E docker tag media ${{ env.DOCKER_ID }}/${{ env.IMAGE_NAME }}:${{ steps.get_env.outputs.GITHUB_SHA }}
          sudo -E docker tag media ${{ env.DOCKER_ID }}/${{ env.IMAGE_NAME }}:${{ steps.get_env.outputs.RELEASE_VERSION }}
          sudo -E docker tag media ${{ env.DOCKER_ID }}/${{ env.IMAGE_NAME }}:latest

      - name: Compose push ${{ env.SERVICE }}
        shell: bash
        run: |
          sudo -E docker push ${{ env.DOCKER_ID }}/${{ env.IMAGE_NAME }}:${{ steps.get_env.outputs.GITHUB_SHA }}
          sudo -E docker push ${{ env.DOCKER_ID }}/${{ env.IMAGE_NAME }}:${{ steps.get_env.outputs.RELEASE_VERSION }}
          sudo -E docker push ${{ env.DOCKER_ID }}/${{ env.IMAGE_NAME }}:latest
