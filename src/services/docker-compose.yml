version: "3.3"
services:
  #
  # Microservices
  #
  media:
    image: ${REGISTRY:-rahalh}/media.api:${TAG:-latest}
    build: ./Media
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - postgres
      - redis
      - kafka
      - init-kafka

  blob:
    image: ${REGISTRY:-rahalh}/blob.api:${TAG:-latest}
    build: ./Blob
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      - kafka
      - init-kafka

  #
  # Infrastructure
  #
  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6380:6379"

  postgres:
    image: "postgres:12.2-alpine"
    restart: unless-stopped
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
#    volumes:
#      - ./Media/Media.API/migrations/:/docker-entrypoint-initdb.d/

  zookeeper:
    image: "bitnami/zookeeper:latest"
    restart: unless-stopped
    ports:
      - "2182:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "true"
    volumes:
      - ./third-party/zookeeper/:/bitnami/zookeeper

  kafka:
    image: "bitnami/kafka:latest"
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - ./third-party/kafka/:/bitnami/kafka

  init-kafka:
    image: "bitnami/kafka:latest"
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic BLOB_UPLOADED --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic BLOB_REMOVED --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic MEDIA_REMOVED --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic MEDIA_UPDATE_FAILED --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

volumes:
  database_postgres:
    driver: local
